#user  nobody;
worker_processes  1;

#error_log    logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}

http {
    include       mime.types;

    default_type  application/octet-stream;
    
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';
    
    #access_log  logs/access.log  main;
    
    sendfile        on;
    #tcp_nopush     on;
    
    #keepalive_timeout  0;
    keepalive_timeout  65;
    
    gzip  on;


upstream static_server {

	server localhost:3005 weight=1;

}	

upstream file_server {

	server localhost:3006 weight=1;

}	

upstream streammedia_server {

	server localhost:3009 weight=1;

}

    include 	  ../consul-template/*.conf;
    
    server {
    	
        listen       80;
        server_name  localhost;
    
        #charset koi8-r;
    
        #access_log  logs/host.access.log  main;


        location / {
            root   html;
            index  index.html index.htm;
        }
        
        	#静态服务
        location /login {
            proxy_pass http://static_server;
        }
        location /register {
            proxy_pass http://static_server;
        }
        location /emailcode {
            proxy_pass http://static_server;
        }
        location ^~ /user/ {
            proxy_pass http://static_server;
        }
        location ^~ /group/ {
            proxy_pass http://static_server;
        }
    
            # 文件
        location ~ ^/static/ {    	
        	proxy_pass http://file_server;
        	
        }
        	# 文件相关api
        location ~ ^/file/ {
        	proxy_pass http://file_server;
        }
        
         	# 流媒体websocket
        location /streammedia {
        	proxy_pass http://streammedia_server;
       		proxy_set_header       Host $host;
       		proxy_set_header  X-Real-IP  $remote_addr;
       		proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
       		proxy_http_version 1.1;
       		proxy_set_header Upgrade $http_upgrade;
       		proxy_set_header Connection "upgrade";
        }
        
        location /ws {
    		proxy_pass http://ws_server;
    		proxy_set_header       Host $host;
    		proxy_set_header  X-Real-IP  $remote_addr;
    		proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
    		proxy_http_version 1.1;
    		proxy_set_header Upgrade $http_upgrade;
    		proxy_set_header Connection "upgrade";
    	}
    	
    	 location ^~ /ws/user/ {
            proxy_pass http://ws_server;
        }

   

        location ~ ^/v1/user/ {
            proxy_pass http://localhost:8090;
            add_header Access-Control-Allow-Credentials true;
        	add_header Access-Control-Allow-Origin *;
        	add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS';
        	add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
            if ($request_method = 'OPTIONS') {
                    return 204;
            }
        }
    
        #error_page  404              /404.html;
    
        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    
        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}
    
        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}
    
        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
        
    }
    
    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;
    
    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;
    
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;
    
    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;
    
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;
    
    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
